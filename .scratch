#!/bin/bash

awk -F '#' '
{
    # Extract datetime up to minute, key, total, and count
    datetime = substr($1, 1, 16);  # Extract datetime up to minute
    key = $2;                      # Extract the key
    total = $3;                    # Extract the total
    count = $4;                    # Extract the count

    # Initialize first total and first count for each datetime, key combination
    if (!(datetime, key) in first_total) {
        first_total[datetime, key] = total;
    }

    # Update last total and accumulate count for the same datetime, key
    last_total[datetime, key] = total;
    count_sum[datetime, key] += count;
    num_records[datetime, key]++;
}
END {
    # Print the header
    printf "%-20s %-15s %-15s %-20s %-15s\n", "Datetime", "Key", "Processed", "Pending Messages", "Total Processed";

    # Process each unique datetime and key combination
    for (entry in first_total) {
        split(entry, parts, SUBSEP);  # Split the composite key (datetime, key)
        datetime = parts[1];
        key = parts[2];

        # Calculate processed value as the difference between last and first total
        processed = last_total[datetime, key] - first_total[datetime, key];

        # Calculate pending messages as the average count
        pending_messages = count_sum[datetime, key] / num_records[datetime, key];

        # Print the results with proper formatting
        printf "%-20s %-15s %-15d %-20.1f %-15d\n", datetime, key, processed, pending_messages, processed;
    }
}
' input.log

